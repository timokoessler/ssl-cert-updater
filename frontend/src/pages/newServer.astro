---
import PageHeader from '@components/PageHeader.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
---

<BaseLayout>
    <PageHeader title="Server hinzufügen" preTitle={import.meta.env.PUBLIC_APP_NAME} visible={true} />
    <div class="page-body mt-2">
        <div class="container-xl">
            <div class="row mt-3">
                <div class="col-lg-6 mt-4 mt-lg-0">
                    <div class="card shadow">
                        <div class="card-body pe-2 py-4" id="card-body">
                            <div id="container">
                                <label class="h2">Betriebssystem auswählen</label>
                                <hr class="mt-0 mb-3" />
                                <div class="mb-3">Wählen Sie das Betriebssystem des Servers aus, auf dem der Updater installiert werden soll.</div>
                                <div class="form-selectgroup form-selectgroup-boxes d-flex flex-column">
                                    <label class="form-selectgroup-item flex-fill">
                                        <input type="radio" name="radio-os" value="linux" class="form-selectgroup-input" checked />
                                        <div class="form-selectgroup-label d-flex align-items-center p-3">
                                            <div class="me-3">
                                                <span class="form-selectgroup-check"></span>
                                            </div>
                                            <div>Linux <span class="badge text-bg-success ms-2">Empfohlen</span></div>
                                        </div>
                                    </label>
                                    <label class="form-selectgroup-item flex-fill">
                                        <input type="radio" name="radio-os" value="windows" class="form-selectgroup-input" />
                                        <div class="form-selectgroup-label d-flex align-items-center p-3">
                                            <div class="me-3">
                                                <span class="form-selectgroup-check"></span>
                                            </div>
                                            <div>Windows</div>
                                        </div>
                                    </label>
                                    <label class="form-selectgroup-item flex-fill text-secondary">
                                        <input type="radio" name="radio-os" value="macos" class="form-selectgroup-input" />
                                        <div class="form-selectgroup-label d-flex align-items-center p-3">
                                            <div class="me-3">
                                                <span class="form-selectgroup-check"></span>
                                            </div>
                                            <div>macOS <span class="badge text-bg-danger ms-2">Manuell</span></div>
                                        </div>
                                    </label>
                                </div>
                                <button class="btn btn-primary mt-3 d-inline" id="nextBtn"
                                    ><i class="ti ti-square-rounded-arrow-right-filled me-1"></i> Weiter</button
                                >
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 mt-3 mt-lg-0"></div>
            </div>
        </div>
    </div>
</BaseLayout>

<style></style>
<script>
    import { getWS } from '@scripts/socket';
    import { errorAlert, cardLoading } from '@scripts/components';
    import confetti from 'canvas-confetti';
    import { onPageLeave, onPageLoad } from '@scripts/router';

    type OS = 'linux' | 'windows' | 'macos';

    let os: OS;
    let serverID: string;

    const socket = getWS();
    const isPageActive = () => window.location.pathname === '/newServer';

    function installCommand(url: string, id: string, token: string) {
        if (os === 'linux') {
            return `bash <(curl -s ${url}/install/${id})`;
        }
        if (os === 'macos') {
            return `sslup setup ${btoa(url)} ${id} ${token}`;
        }
        return 'Kein Befehl für dieses Betriebssystem verfügbar.';
    }

    onPageLoad(() => {
        const container = document.getElementById('container')!;

        socket.emit('joinUIUpdates', 'server');
        onPageLeave(() => {
            socket.emit('leaveUIUpdates', 'server');
        });

        document.getElementById('nextBtn')!.addEventListener('click', async () => {
            os = (document.querySelector('input[name="radio-os"]:checked') as HTMLInputElement).value as OS;
            if (typeof os !== 'string' || !['linux', 'windows', 'macos'].includes(os)) {
                alert('Bitte wähle ein Betriebssystem aus.');
                return;
            }
            container.innerHTML = `<label class="h2">Name festlegen</label>
            <hr class="mt-0 mb-3">
            <div class="mb-3">
                <label class="form-label required">Name</label>
                <input type="text" class="form-control" id="serverName" placeholder="Legen Sie einen Namen für den Server fest." required>
            </div>
            <div class="mb-3">
                <label class="form-check">
                    <input class="form-check-input" type="checkbox" id="checkIP" checked>
                    <span class="form-check-label">IP bei Authentifizierung prüfen</span>
                </label>
            </div>
            <div class="alert alert-warning mb-3">Der Server sollte eine statische IP-Adresse besitzen, wenn Sie die IP-Prüfung aktivieren.</div>
            <button class="btn btn-primary mt-3 d-inline" id="nextBtn"><i class="ti ti-square-rounded-arrow-right-filled me-1"></i> Weiter</button>
            <div id="error"></div>`;
            document.getElementById('nextBtn')!.addEventListener('click', async () => {
                const name = (document.getElementById('serverName') as HTMLInputElement).value;
                if (typeof name !== 'string' || name.length < 3 || name.length > 32) {
                    document.getElementById('error')!.innerHTML = errorAlert('Bitte geben Sie einen Namen mit mindestens 3 und maximal 32 Zeichen ein.');
                    return;
                }
                const checkIP = (document.getElementById('checkIP') as HTMLInputElement).checked;
                container.innerHTML = cardLoading();
                socket.emit('createServer', name, checkIP, (url: string, id: string, token: string) => {
                    if (!isPageActive()) return;
                    serverID = id;
                    if (typeof url !== 'string' || typeof id !== 'string') {
                        document.getElementById('error')!.innerHTML = errorAlert('Es ist ein Fehler aufgetreten.');
                        return;
                    }
                    if (os === 'linux') {
                        container.innerHTML = `<label class="h2">Software installieren</label>
                        <hr class="mt-0 mb-3">
                        <div class="mb-3">Führen Sie folgenden Befehl mit root-Rechten auf Ihrem Server aus:</div>
                        <pre id="copy">${installCommand(url, id, token)}</pre>
                        <hr class="mt-4 mb-5">
                        ${cardLoading('Warte auf Abschluss der Installation...')}`;
                    } else if (os === 'windows') {
                        container.innerHTML = `<label class="h2">Software installieren</label>
                        <hr class="mt-0 mb-3">
                        <div class="mb-3">Laden Sie das PowerShell-Skript herunter und führen Sie es mit Administrator-Rechten auf Ihrem Server aus. Bitte beachten Sie, dass die Datei nur für eine Installation gültig ist.</div>
                        <a href="${url}/install/${id}/win" target="_blank" class="btn btn-primary"><i class="ti ti-download me-1"></i> Herunterladen</a>
                        <div class="mt-3"><small>Um das Skript mit Administrator-Rechten auszuführen, öffnen Sie die PowerShell als Administrator und führen Sie dann die heruntergeladene Datei aus.
                            Falls Sie die Meldung erhalten, dass das Skript nicht ausgeführt werden kann, versuchen Sie die Datei im Explorer zu öffnen und entfernen Sie den Haken bei
                            "Beim Öffnen von Dateien dieser Dateitypen immer bestätigen". Führen Sie die Datei dann erneut mit einem PowerShell-Fenster als Administrator aus.</small></div>
                        <hr class="mt-4 mb-5">
                        ${cardLoading('Warte auf Abschluss der Installation...')}`;
                    } else {
                        container.innerHTML = `<label class="h2">Software installieren</label>
                        <hr class="mt-0 mb-3">
                        <div class="mb-3">Laden Sie die Anwendung herunter und führen Sie den folgenden Befehl aus:</div>
                        <a href="${url}/install/${id}/macos/x64" target="_blank" class="btn btn-primary"><i class="ti ti-download me-1"></i> Herunterladen</a>
                        <div class="mt-3"><pre id="copy">${installCommand(url, id, token)}</pre></div>
                        <div class="mt-3"><small>Stellen Sie sicher, dass die Anwendung als Hintergrundprozess mit dem Systemstart ausgeführt wird. Die Anwendung muss mit sslup run ausgeführt werden.</small></div>
                        <hr class="mt-4 mb-5">
                        ${cardLoading('Warte auf Abschluss der Installation...')}`;
                    }

                    document.getElementById('copy')!.addEventListener('click', () => {
                        const codeElement = document.getElementById('copy')!;
                        const text = codeElement.innerText;
                        navigator.clipboard.writeText(text);
                        codeElement.classList.add('text-success', 'fw-bold');
                        codeElement.innerText = 'In Zwischenablage kopiert';
                        setTimeout(() => {
                            codeElement.classList.remove('text-success', 'fw-bold');
                            codeElement.innerText = installCommand(url, id, token);
                        }, 1000);
                    });
                });
            });
        });
    });

    socket.on('serversUpdate', (servers: SSLServer[]) => {
        if (!isPageActive()) return;
        if (!serverID) return;
        if (!Array.isArray(servers)) return;
        const server = servers.find((s) => s._id === serverID);
        if (!server) return;
        if (!server.online) return;
        document.getElementById('container')!.innerHTML = `<div class="h2">Installation erfolgreich 🥳</div>
        <hr class="mt-0 mb-3">
        <div class="alert alert-success mb-3" role="alert">Der Client wurde erfolgreich installiert und ist nun mit dem Server verbunden.</div>
        <div class="btn-list">
            <a href="/server/${serverID}" class="btn btn-primary d-inline"><i class="ti ti-server me-1"></i> Server verwalten</a>
            <a href="/" class="btn btn-secondary d-inline"><i class="ti ti-home me-1"></i> Zur Übersicht</a>
        </div>`;
        confetti();
    });
</script>
